[gcode_macro LOAD_FILAMENT]
variable_load_distance:  300 #*2
variable_purge_distance:  100
gcode:

    {% set temperature = printer.extruder.temperature|int %}
   
    {% set speed = params.SPEED|default(500) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{load_distance} F{max_velocity} # fast-load
    {% if temperature > 199 %}
    G1 E{purge_distance} F{speed} # purge
    G1 E{purge_distance} F{speed} # purge
    #so we have now "loaded" but it might not be enough, lets ask if we should try some more?
   {% set is_print_active = printer['virtual_sdcard'].is_active %}
   {% if is_print_active %} #if we are printing then we dont want to cut, we want to resume our print
    RESPOND TYPE=command MSG="action:prompt_begin Filiment Load"
    RESPOND TYPE=command MSG="action:prompt_text More Purge Required?"
    RESPOND TYPE=command MSG="action:prompt_footer_button PURGE|_PURGE_MORE"
    RESPOND TYPE=command MSG="action:prompt_footer_button RESUME|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    RESTORE_GCODE_STATE NAME=load_state
   {% else %}
    RESPOND TYPE=command MSG="action:prompt_begin Filiment Load"
    RESPOND TYPE=command MSG="action:prompt_text More Purge Required?"
    RESPOND TYPE=command MSG="action:prompt_footer_button PURGE|_PURGE_MORE"
    RESPOND TYPE=command MSG="action:prompt_footer_button CUT|_SET_FILAMENT"
    RESPOND TYPE=command MSG="action:prompt_footer_button EXIT|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_show"
    RESTORE_GCODE_STATE NAME=load_state
    {% endif %}
    {% else %}
    RESPOND TYPE=error MSG='Temp too low to finish load'
    {% endif %}
   
    
[gcode_macro _PURGE_MORE]
variable_purge_distance:  50
gcode:
      {% set speed = params.SPEED|default(500) %}
      G1 E{purge_distance} F{speed} # purge

 

[gcode_macro UNLOAD_FILAMENT]
   variable_unload_distance:  300 #*2
gcode:
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    FILAMENT_CUT
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state
    
[gcode_macro PARK_FILAMENT]
gcode:
      M83
      G1 E-100 F300

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = -10|float %}
  {% set y_park = printer.toolhead.axis_maximum.y|float %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}


  FILAMENT_CUT
    G91
    G1 E-78
    G90
  SET_IDLE_TIMEOUT TIMEOUT=600 #set timeout back to 10 mins
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro RESUME]
rename_existing: RESUME_BASE_CP
gcode:
 SET_IDLE_TIMEOUT TIMEOUT=600 #set timeout back to 10 mins
 RESUME_BASE_CP


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  SET_IDLE_TIMEOUT TIMEOUT=7200 #set timeout to 2 hours
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}



  RESUME_BASE {get_params}

[gcode_macro END_PRINT]
gcode:
    SET_IDLE_TIMEOUT TIMEOUT=600 #set timeout back to 10 mins
    {% set x_stop = params.X|default(-10)|int %}
    {% set y_stop = params.Y|default(printer.toolhead.axis_maximum.y)|int %}
    {% set z_stop = printer.toolhead.axis_maximum.z|int %}
    {% set z_pos = printer.toolhead.position.z|int %}

    {% if z_pos < (z_stop-6) %}
      G91
      G1 E-2 F2700
      G1 Z5
    {% else %}
      G91
      G1 E-2 F2700
      G1 Z1
    {% endif %}
    
    FILAMENT_CUT
    G1 E-78
    G90
    G1 X{x_stop} Y{y_stop}
    M106 S0
    M104 S0
    M140 S0
  SET_FILAMENT_SENSOR SENSOR=ex1 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex2 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex3 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex4 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex5 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex6 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex7 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex8 ENABLE=1

[gcode_macro _CONFIGURE_FILAMENT_OFFSET]
gcode:
    {% set FILAMENT_TYPE = params.FILAMENT_TYPE %}

    {% if FILAMENT_TYPE == 'PLA' %}
       {action_respond_info("Printing in PLA")}
        # SET_GCODE_OFFSET Z=-1
        # PRESSURE ADVANCE
        # SET_PRESSURE_ADVANCE ADVANCE=0.0558
    {% elif FILAMENT_TYPE in ['PET','PETG','TPU'] %} 
     {action_respond_info("Printing in PETG")}
        # PETG Zoffset   
      # SET_GCODE_OFFSET Z=-0.22
        # PRESSURE ADVANCE
        #SET_PRESSURE_ADVANCE ADVANCE=0.125
    {% else %}   
     {action_respond_info("I dont know what im printing in")}
        # Other kind of filament we reset to 0
        #SET_GCODE_OFFSET Z=-0.05
    {% endif %}


[gcode_macro _RUNOUT_SENSORS]
gcode:
  {% set EXTRUDER = params.EXTRUDER %} #find the extruder value
  {% set is_print_active = printer['virtual_sdcard'].is_active %}
  {% if is_print_active %} #if we are printing then disable all
  SET_FILAMENT_SENSOR SENSOR=ex1 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex2 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex3 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex4 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex5 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex6 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex7 ENABLE=0
  SET_FILAMENT_SENSOR SENSOR=ex8 ENABLE=0
  #then enable the specific one
  SET_FILAMENT_SENSOR SENSOR=ex{EXTRUDER} ENABLE=1
  {% else %} #if not printing then enable all
  SET_FILAMENT_SENSOR SENSOR=ex1 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex2 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex3 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex4 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex5 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex6 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex7 ENABLE=1
  SET_FILAMENT_SENSOR SENSOR=ex8 ENABLE=1
  {% endif %}

[gcode_macro START_PRINT]
gcode:
   # BED_MESH_PROFILE LOAD=default
    {% set BED_TEMP1 = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER1 = params.EXTRUDER|default(0)|int %}
    {% set EXTRUDER_TEMP1 = params.EXTRUDER_TEMP|default(200)|float %}
    {% set singlecolor = params.SINGLECOLOR|default(1)|int %} #test in slicer to see if purge block has been used

    {% if singlecolor==1 %} #if the print only has a single color in use (no purge block)
    RESPOND TYPE=command MSG="action:prompt_begin Select an extruder to print from"
    RESPOND TYPE=command MSG="action:prompt_text Print Default:"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button T{EXTRUDER1}|_START_PRINT_2 EXTRUDER={EXTRUDER1} BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_text Select Other Extruder"
    RESPOND TYPE=command MSG="action:prompt_text Please check filament type before printing!"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button T0|_START_PRINT_2 EXTRUDER=0 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T1|_START_PRINT_2 EXTRUDER=1 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T2|_START_PRINT_2 EXTRUDER=2 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T3|_START_PRINT_2 EXTRUDER=3 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T4|_START_PRINT_2 EXTRUDER=4 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T5|_START_PRINT_2 EXTRUDER=5 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T6|_START_PRINT_2 EXTRUDER=6 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button T7|_START_PRINT_2 EXTRUDER=7 BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}|secondary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    #RESPOND TYPE=command MSG="action:prompt_footer_button CONTINUE|RESPOND TYPE=command MSG=action:prompt_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_PRINT|error"
    RESPOND TYPE=command MSG="action:prompt_show"
    {% else %}
    _START_PRINT_2 EXTRUDER={EXTRUDER1} BED_TEMP={BED_TEMP1} EXTRUDER_TEMP={EXTRUDER_TEMP1}
    {% endif %}
  

[gcode_macro _START_PRINT_2]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER = params.EXTRUDER|default(0)|int %}
    {% set axismax = printer.toolhead.axis_maximum %}
    {% set axismin_x = printer.toolhead.axis_minimum.x %}
    {% set axismin_y = printer.toolhead.axis_minimum.y %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    #pre-heat the extruder while we wait for the bed - none blocking
    M104 S150
    # Heat bed for probing
    M190 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Home the printer
    G28  
    # align the gantry
    Z_TILT_ADJUST
    #*******************************************
    # Changed from adaptive mesh to use the BTT EDDY
    #*******************************************
    #BED_MESH_CALIBRATE PROFILE=default ADAPTIVE=1
    BTT_BED_MESH_CALIBRATE METHOD=rapid_scan
    
    G1 Z10 F450
    #start heating extruder early - none blocking
    M104 S{EXTRUDER_TEMP}
    G92 E0 
    #move to a positon just over the edge of the bed
    #this causes any filiemt drip to drop off the side
    #and then gets "cut" off as it moves to purge line
    G1 X-10 Y152 Z0.1 F900 
    M109 S{EXTRUDER_TEMP}

    
    T{EXTRUDER}
    {% if axismax.x > 200 %}
      G92 E0 
      G1 X2 Y152 Z0.4 F900 
      G92 E0
      G1 Y77 E20 F900 
      G92 E0
      G1 Y2 E20 F900 
      G92 E0
      G1 X100 E30 F900 
      G92 E0
      G1 X200 E30 F900 
      G92 E0
      G1 Y4 F900 
      G92 E0
      G1 X100 E30 F900
      G92 E0
      G1 X4 E30 F900 
      G92 E0
      G1 Y77 E20 F900
      G92 E0
      G1 Y152 E20 F900
      G92 E0 ;Reset Extruder
    {% else %}
    {% if axismax.y > 153 %}
      G92 E0 ;Reset Extruder
      G1 X{axismin_x + 2} Y152 Z0.4 F900 ;Move to start position
      G92 E0
      G1 Y77 E20 F900 ;Draw the first line
      G92 E0
      G1 Y2 E20 F900 ;Draw the first line
      G92 E0
      G1 X{axismax.x / 2} E30 F900 ;Draw the first line
      G92 E0
      G1 X{axismax.x - 2} E30 F900 ;Draw the first line
      G92 E0
      G1 Y{axismin_y + 4} F900 ;Draw the first line
      G92 E0
      G1 X{axismax.x / 2} E30 F900 ;Draw the first line
      G92 E0
      G1 X{axismin_x + 4} E30 F900 ;Draw the first line
      G92 E0
      G1 Y77 E20 F900 ;Draw the first line
      G92 E0
      G1 Y152 E20 F900
      G92 E0
    {% else %}
          G92 E0 ;Reset Extruder
      G1 X{axismin_x + 2} Y{axismax.Y - 2} Z0.4 F900 ;Move to start position
      G92 E0
      G1 Y{axismax.Y / 2} E20 F900 ;Draw the first line
      G92 E0
      G1 Y2 E20 F900 ;Draw the first line
      G92 E0
      G1 X{axismax.x / 2} E30 F900 ;Draw the first line
      G92 E0
      G1 X{axismax.x - 2} E30 F900 ;Draw the first line
      G92 E0
      G1 Y{axismin_y + 4} F900 ;Draw the first line
      G92 E0
      G1 X{axismax.x / 2} E30 F900 ;Draw the first line
      G92 E0
      G1 X{axismin_x + 4} E30 F900 ;Draw the first line
      G92 E0
      G1 Y{axismax.Y / 2} E20 F900 ;Draw the first line
      G92 E0
      G1 Y{axismax.Y - 2} E20 F900
      G92 E0
    {% endif %}
    {% endif %}
    #Setup the offset based on the type of filiemt printing
  _CONFIGURE_FILAMENT_OFFSET FILAMENT_TYPE={FILAMENT_TYPE}
    G92 E0 ;Reset Extruder


[gcode_macro SET_FILAMENT_POSITION]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Set Filament Position"
    RESPOND TYPE=command MSG="action:prompt_text Make sure the extruder is sufficiently heated and the correct extruder is selected."
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button T0|T0|primary"
    RESPOND TYPE=command MSG="action:prompt_button T1|T1|primary"
    RESPOND TYPE=command MSG="action:prompt_button T2|T2|primary"
    RESPOND TYPE=command MSG="action:prompt_button T3|T3|primary"
    RESPOND TYPE=command MSG="action:prompt_button T4|T4|primary"
    RESPOND TYPE=command MSG="action:prompt_button T5|T5|primary"
    RESPOND TYPE=command MSG="action:prompt_button T6|T6|primary"
    RESPOND TYPE=command MSG="action:prompt_button T7|T7|primary"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    RESPOND TYPE=command MSG="action:prompt_button EXTRUDE|_EXTRUDE_H|warning"
    RESPOND TYPE=command MSG="action:prompt_button SET|_SET_FILAMENT|warning"
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_show"
 
[gcode_macro _EXTRUDE_H]
gcode:
    {% set temperature = printer.extruder.temperature|int %}
    {% if temperature > 199 %}
    G92 E0
    G1 E20 F500
    G92 E0
    G1 E20 F500
    G92 E0
    G1 E20 F500
    G92 E0
    G1 E20 F500
    G92 E0
    G1 E20 F500
    G92 E0
    {% endif %}

[gcode_macro _SET_FILAMENT]
gcode:
    FILAMENT_CUT
    G92 E0
    G1 E-20 F500
    G92 E0
    G1 E-20 F500
    G92 E0
    G1 E-20 F500
    G92 E0
    G1 E-20 F500
    G92 E0
    RESPOND TYPE=command MSG=action:prompt_end


    #*******************************************
    # Changed X move sequence to stop moving out of bounds and shutting down print
    #*******************************************
[gcode_macro FILAMENT_CHANGE]
gcode:
    {% set LAYER_NUM = params.LAYER_NUM|int %}
    {% set NEXT_EXTRUDER = params.NEXT_EXTRUDER|int %}

    {% if LAYER_NUM == -1 %}

    {% endif %}

    {% if LAYER_NUM != -1 %}
    #{LAYER_NUM}
    FILAMENT_CUT
    G4 P300
    G91
    G1 X-20 E-20 F300 #X10 ##This is the cause of the orignal error need to move negative first
    G92 E0
    G1 X10 E-30 F500 #X-20
    G92 E0
    G1 X-10 E-30 F600 #X10
    T{NEXT_EXTRUDER}
    G92 E0
    G1 X10 E20 F500 #X-10
    G92 E0
    G1 X-10 E20 F300 #X10
    G92 E0
    G1 X10 E20 F300 #X-10
    G92 E0
    G1 X10 E20 F300
    G90
    {% endif %}

# FILAMENT_CHANGE LAYER_NUM=[layer_num] NEXT_EXTRUDER=[next_extruder]